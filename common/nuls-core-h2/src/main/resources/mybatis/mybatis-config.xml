<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "./mybatis-3-config.dtd">
<configuration>
    <properties resource="db_config.properties"></properties>
    <settings>
        <!-- 全局映射器启用缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 查询时，关闭关联对象即时加载以提高性能 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 允许使用列标签代替列名 -->
        <setting name="useColumnLabel" value="true"/>
        <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
        <setting name="useGeneratedKeys" value="false"/>
        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
        <setting name="autoMappingBehavior" value="FULL"/>
        <!-- 对于批量更新操作缓存SQL以提高性能 defaultExecutorType 这项不能设置，否则 useGeneratedKeys 不起作用-->
        <!-- 数据库超过25000秒仍未响应则超时 -->
        <setting name="defaultStatementTimeout" value="60000"/>

        <!--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 控制台打印sql语句,正式发布项目时记得关闭 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!-->
        <setting name="logImpl" value="${mybatis.sql}" />
    </settings>

  <!--  <typeAliases>
        <typeAlias type="io.nuls.h2.utils.Searchable"/>
    </typeAliases>-->


    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 4.0.0以后版本可以不设置该参数 -->
            <!-- <property name="dialect" value="mysql"/>   -->
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样-->
            <property name="offsetAsPageNum" value="true"/>
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true"/>
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）-->
            <property name="pageSizeZero" value="true"/>
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="true"/>
            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;"/>
            <!-- 支持通过Mapper接口参数来传递分页参数 -->
            <property name="supportMethodsArguments" value="true"/>
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page
            <property name="returnPageInfo" value="check"/> -->
        </plugin>
    </plugins>


    <!-- dataSource only use druidDataSource -->
    <environments default="druid">
        <environment id="druid">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="io.nuls.core.h2.utils.DruidDataSourceBuilder">
                <property name="driverClassName" value="${driverClassName}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
                <property name="initialSize" value="${initialSize}"/>
                <property name="minIdle" value="${minIdle}"/>
                <property name="maxActive" value="${maxActive}"/>
                <property name="maxWait" value="${maxWait}"/>
                <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
                <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
                <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
                <property name="maxPoolPreparedStatementPerConnectionSize"
                          value="${maxPoolPreparedStatementPerConnectionSize}"/>
                <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
                <property name="validationQuery" value="${validationQuery}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!--<package name="io.nuls.h2.common"/>-->
        <package name="${mybatis.mapper}"/>
    </mappers>
</configuration>