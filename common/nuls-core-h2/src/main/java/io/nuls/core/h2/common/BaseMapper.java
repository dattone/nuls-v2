/**
 * MIT License
 *
 * Copyright (c) 2017-2019 nuls.io
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package io.nuls.core.h2.common;


import io.nuls.core.h2.utils.Searchable;

import java.util.List;


/**
 * mybatis基础查询类，封装了对象的基本查询方法,
 * 以下方法sql实现方式，都需自行写在mapper.xml里
 * @author zhouwei
 *
 */
public interface BaseMapper<K, V> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(K key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int insert(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int insertSelective(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    V selectByPrimaryKey(K key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(V record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table block
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(V record);

    int batchInsert(List<V> list);

    Long countAll();

    List<V> selectList(Searchable searchable);

    long selectCount(Searchable searchable);


}
